Title:	Order index convention
Stat:	open
Disp:	
Prio:	med
Cats:	dev
Reqtrs:	
AssdTo:	stuart@friix.com

2007-02-01 00:00:00 stuart@friix.com
  jmdict, *.pl -- Decide on policy re ord numbers and list indexes:  In
  EntrList struct, many things (eg rdng records) have both a "rdng" key
  and a index in list.  Some places we (eg showentr.pl filt() calls) we
  take the key number as definitive, other places (jmdict::addentr()) we
  take the index position as definitive.  Currently no problem because the
  two numbering methods are consistent but may be future operations that
  make them inconsistent which will  introduce bugs.  Should adopt some
  standard rules to control this?

2007-02-01 00:00:00 stuart@friix.com
  Current (2007/07/25) policy:
  When writing entry structure, all ord numbers are regenerated based on
  list position.  Existing number in records are overwritten.  (Done by
  jmdict::setkeys()).
  
  When read in, jmdict::EntrList() will make sure (by appropriate use of
  ORDER clause in SQL) that list positions and numbers agree.
  
  Modifiers of entr objects are resposible for maintaining consistency or
  documenting when not maintained.
  
  Dual parented records (freq, restr, stagr, stagk, xref) will be linked
  to both of their parent records.
  
  Entr objects being created for output need not supply record numbers.
  User of object responsible for checking index number presence/absense if
  it needs them.
