Title:	Make jelparse.py create temp files in temp dir
Stat:	closed
Disp:	done
Prio:	med
Cats:	bug
Reqtrs:	
AssdTo:	

2008-04-27 15:19:06 sysad
  jelparser.py uses Ply (http://dabeaz.com/ply) to parse
  new and edited entries described in JEL (Jmdict Edit
  Language).  When the ply code runs, it creates cache
  files that contain the generated parser tables.  These
  files are reused the next time the ply code needs to do
  a parse saving the considerable time it takes to generate
  them.  Unfortunately they are created in the current
  directory, whereever that may be.  This creates two
  problems:
  
  * When program runs in a different directory, it inccurs
    avoidable cost of regenerating the cache files.
  * The files are annoying "droppings" and can create un-
    wanted noise when using a version control system.
  
  Need to figure out how to tell Ply to create them in
  some fixed, out-of-the-way place.
  The files are parsetab.py and .pyc.

2009-02-26 11:00:00 stuart
  This was done in changeset e103bcff8f6a 2009-02-02 by 
  writing a script to generate the parsetab file (tools/
  gen_parsetab.py), and doing that in the python/lib/Makefile.
  The parsetab file is now named python/lib/jelparse_tab.py
  and is managed under Mercurial.  The main Makefile "web"
  target copies it to the cgi lib directory.  All of this 
  together should prevent Ply from needing to regenerate it
  at runtime.

2009-03-13 20:41:00 stuart
  Re-opened this issue.

  Noticed when running the test_jelparse tests, a parsetab.py
  file was being created in the tests directory.  Problem was
  that test_jelparse.py was simply calling jelparse.create_parser()
  with no special arguments.  web/cgi/edconf.py, which also calls
  create_parser, does so with several arguments needed to encourge
  (no way to force) Ply to use the library jelparse_tab files.

  Modified jelparse.create_parser to use these argument values by
  default if not explicitly overwridden, so that simply calling
  create_parser() with no args, will use the prebuilt library parse
  table file.

  Re-closed this issue.
