Title:	Additional submission checks in edconf.py
Stat:   open
Disp:	
Prio:	med
Cats:	dev
Reqtrs:	
AssdTo:	stuart

2010-06-09 09:52:00 stuart
  In email from jwb, 2010-06-07, 
  (Subject: "Useful check (Fwd: Output from "cron" command)"),
  he asked about adding to edconf.py checks for unbalanced parenthesis
  or curly brackets in gloss texts.

  Additionally in 2010-06-08 email (same subject) he suggested also
  checking gloss texts for tab characters or double space characters
  and that he also sometimes sees JIS spaces and punctuation characters
  in glosses.  JIS characters in PoS tags was also mentioned but:
  1) those should result in a parse error; 2) perhaps they should be
  detected and quietly converted to ascii in the jel parser.

  Note that stringent checking assumes one can accurately predict what
  will need to go into an entry: jmdictdb rev a0f1cb04b0d5-2010-06-18
  removed the kana check on readings because it turned out to be
  desireable to ignore the documented requirement that readings are
  kana when processing edict input from the wwwjdic pages.

  See also IS-33 for database checking after submission.
  See also IS-190 for implementing per-corpus warning and rejections.

2010-06-16 20:16:00 stuart
  jwb mentioned another problem seen today -- an (invisible?) ^M
  character that occured in the gloss of a user's submission.
  [Rev 2010-06-24-d244f825aafb should quietly strip things like 
  this before it needs to be checked for.]

2010-06-28 08:59:00 stuart
  Should check that the K.R[s] values given in an xref are not
  disallowed by restr/stagr/stagk restrictions.

2010-07-23 22:27:00 stuart
  In list email today, jwb again mentioned desire for checking for 
  jis semi-colons.  Also mentioned (in support of Scott and Paul
  Blay) that entries with out PoS should be rejected, not warned
  about as is currently done.  Opened IS-190 to document the 
  implementation of per-corpus warnings and rejections.  IS-168
  will continue to document restrictions that are univerally 
  (all corpora) applicable and can thus be hardwired into the 
  code. 
