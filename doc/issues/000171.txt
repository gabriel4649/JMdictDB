Title:	Create database with japanese collation order
Stat:   closed
Disp:	done
Prio:	med
Cats:	dev
Reqtrs:	
AssdTo:	stuart

2010-06-11 09:27:00 stuart
  IS-170 describes changes to the cgi scripts to present
  search results in lexical order by adding an ORDER BY
  clause to the query that retrieves the search results.  
  Upon trying this though the result order was incorrect.
  Problem is that when a jmdictdb database is created, it
  uses the locale (and associated collation order) of the 
  server at the time.

  Need to 1) modify Makefile to create jmdictdb databases 
  with a japanese collation order, and 2) modify the
  collation order of the existing jmtest and jmdict data-
  bases. 

2010-06-11 10:02:00 stuart
  Modified Makefile to use the common (on linux machines anyway)
  ja_JP.utf-8 locale.  Modified the README.txt file to describe 
  how to overide that to use locale "japanese" on Windows.

  Reloaded database on my Fedora 11 test machine, and confirmed
  sort order from srchres page (after modified per IS-170) seemed
  as expected.

2010-06-11 13:01:00 stuart
  Will run following procedure on Arakawa.
  ----
  pg_dump -Fc jmtest >jmtest.dmp
  psql -U postgres
    DROP DATABASE jmnew;
    CREATE DATABASE jmnew TEMPLATE template0 ENCODING 'utf8' 
      LC_COLLATE 'ja_JP.utf8' LC_CTYPE 'ja_JP.utf8';
  pg_restore -d jmnew jmtest.dmp
  psql -U postgres
    DROP DATABASE jmold;
    ALTER DATABASE jmtest RENAME TO jmold;
    ALTER DATABASE jmnew  RENAME TO jmtest;
  ----

2010-06-14 11:49:00 stuart
  First attempts to change database collation order to ja_JP.utf8
  on 2010-06-12 resulted in an error that the locale was unknown.
  And doing a "locale -a" indeed listed only C and POSIX.  After
  some mail exchanges with William Maton (sys admin for Arakawa)
  it turned out that on Ubuntu, locales are not supplied in a package
  as on Fedora, but rather a root user creates them as needed using
  the locale-gen command ("locale-gen ja_JP.utf8 utf8" in this case.)
  After that was done, "locale -a" showed the japanese locale, and
  the procedure noted above was successfully executed.  Have not
  changed jmdict yet, but will follow same procedure.
