Title:	Exceptions with unicode text produce unreadable message.
Stat:   open
Disp:	
Prio:	med
Cats:	dev
Reqtrs:	
AssdTo:	stuart

2010-06-18 10:15:00 stuart
  Have noticed that sometimes error messages produced from the
  construct "unicode(e)" where e in an Exception object produce 
  a unreadable error message when the exception contains non-ascii
  unicode text.  The message looks ok if the text is ascii:

    unicode (OSError (2, 'No such file', u'file.txt'))
    => u"[Error 2] No such file: 'file.txt'"

    unicode (OSError (2, 'No such file', u'ファイル.txt'))
    => u"(2, 'No such file')" 

2010-06-18 10:22:00 stuart
  In changeset d609940a9d50-2010-06-16, all the cgi scripts were
  modified so that calls to parseform() were wraped in and exception
  handler like:
    try: form, svc, host, cur, sid, sess, parms, cfg = jmcgi.parseform()
    except StandardError, e: jmcgi.err_page ([unicode (e)])

  However, if an exception is caught and contains unicode text, 
  the message produced by "unicode(e)" is not a unicode version
  of the message but rather a unicode version of a repr of the
  message.  That is, it appears that "unicode(e)" is syntactic
  sugar for "unicode(str(e))"

    unicode (OSError (2, 'No such file', u'ファイル.txt'))

  produces (on Python-2.6.5 on MS Windows) the string 

    u"OSError [Error 2] No such file: u'\\u30d5\\u30a1\\u30a4\\u30eb.txt'"

  (that string has a length of 55.)  
  On Python 2.6 (Fedora-11) and Python 2.6.4 (Ubuntu), it is even 
  worse... 

    u"(2, 'No such file')" 

  Handling of exceptions with unicode is discussed in the Python
  bug tracker issues 2517 and 6108:
    http://bugs.python.org/issue2517
    http://bugs.python.org/issue6108

  Responses to a post in comp.lang.python (2010-06-16, 
  "Exceptions and unicode") seem to acknowledge the problem but
  gave little hope for a fix other than to move to Python 3.x.

    http://groups.google.com/group/comp.lang.python/browse_thread/thread/f3d0a1f554583eac#
