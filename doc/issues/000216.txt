Title:	Losing xrefs after submission 
Stat:	open
Disp:	
Prio:	crit
Cats:	
Reqtrs:	
AssdTo:	stuart

2012-06-11 21:12:00 stuart
 Email on the edict list from Jean-Luc Léger (2012-06-04, 
 "Bug in JmdictDB interface (Was: [edict-jmdict] Policy about stars")
 noted the disappearance of some xrefs after submission.
 Was not able to look at problem seriously until today.
 JLL also noted in a post on 2012-06-08 a similar problem
 with entries 2177620 [南十字座/the Southern Cross/] and 
 2177650 [十字座 /Southern Cross/] where 2177650 had an xref
 to 2177620 that disappeared after editing 2177620.
 jwb also reported some cases of disappearing xrefs.

2012-06-11 23:20:00 stuart
 Was able to reproduce in a local database loaded from a 
 jmdict.xml with a filesystem date of 2012-04-28.  This 
 file still had entries 2177620 and 2177650 with the xref.

 Edited 2177620 and on confirmation page no reverse xref
 is shown.

 Looking for another simple one xref entry pair I found
 2672580 -> 2672570.  Editing 2672570 results in a conf
 page that shows the reverse ref.  Not sure why problem 
 with first pair but not second.  Here are xrefs in database:

 seq#[id#]: 2177650[111192] -> 2177620[111189]  
 jmnew=# select * from xref where entr in (111192,111189) or xentr in (111192,111189);
  entr  | sens | xref | typ | xentr  | xsens | rdng | kanj | notes 
 -------+------+------+-----+--------+-------+------+------+-------
 111192 |    1 |    1 |   3 | 111189 |     1 |      |    2 | 

 seq#[id#]: 2672580[159107] -> 2672570[159106]
 jmnew=# select * from xref where entr in (159107,159106) or xentr in (159107,159106);
  entr  | sens | xref | typ | xentr  | xsens | rdng | kanj | notes 
 -------+------+------+-----+--------+-------+------+------+-------
 159107 |    1 |    1 |   3 | 159106 |     1 |    1 |      | 
 
 In the case of both entries, there is only one entry instance,
 the active one, for each entry.

2012-06-12 14:02:00 stuart
 Problem seems to be in this code in web/cgi/edconf.py (around
 line 178).  It is intended to removed any xrefs to the current
 (edited) entry that refer to reading or kanji no longer on the
 edited entr:
    for es in entr._sens:
        es._xrer = [x for x in es._xrer
                    if (x.rdng is None or x.rdng <= len(x.TARG._rdng))
                      and (x.kanj is None or x.kanj <= len(x.TARG._kanj))]
 The for statement loops thru the senses on the new entry.
 For each of those senses, the list comprehension sets 'x' to
 each reverse xref.  The 'if' clause is intended to filter out
 any reverse xrefs that have a reference to a reading or kanji
 that no longer exists on the new entry.  We do this by excluding
 any reverse xrefs that have a rdng or kanj number larger than 
 the length of the rdng or kanj list on TARG (which is an entry
 object representing the other end of the xref) (i.e. that references
 a rdng/kanj beyond the end of the list.) 

 The error is that x.TARG is *not* our new entry which has the 
 readings and kanji the (reverse) xref is referencing, it is 
 the entry containing the original xref.  So the we are using
 the wrong rdng/kanj lists when deciding to exclude reverse xrefs.

 In the case reported by JLL, entry 2177650 has one sense with
 one xref to 2177620.  Entry 2177650 also has one kanji.  The 
 xref references kanji #2 on 2177620.
 When 2177620 is edited the code above sees that the reverse xref
 refers to kanji #2 and excludes it because it looks at the wrong
 kanji list, the one on 2177650 with one kanji,_rather than the
 one on 2177620 which has two kanji.

2012-06-14 00:32:00 stuart
 Wrote the rev xref code in edconf.py.  New code fixes bug but 
 also fixes design problem -- xrefs rdng and kanj numbers are 
 adjusted in the new entry so that they point to the same rdng
 of kanj text even if the text was reordered on the new entry.
 Unfortunately we can't do this for senses because there is
 no way to uniquely identify a sense hence no way to track 
 it is it moves.  IS-197 proposes to fix that.

 Also collect xrers that will be deleted and display them in a 
 warning box on the edconf.tal confirmation page.

2012-06-16 07:12:00 stuart
 Wrote tests/test_edconf.py which contains some simple tests
 based on xml data in python/tests/data/edconf/.  A lot of time 
 went into a mock database suitable for calling jdb.augment_xrefs()
 against. 
