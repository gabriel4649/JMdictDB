Title:	xref duplicate key error when trying to approve submission
Stat:	open
Disp:	
Prio:	high
Cats:	bug
Reqtrs:	
AssdTo:	stuart

2014-08-31 19:06:00 stuart
 On 08/31/2014 06:24 PM, René Malenfant rene_malenfant@hotmail.com [jmdict_editors] wrote:
 > There’s something wrong with a batch of entries related to ヲタ車.
 > 
 > Pending edits to オタク cannot be approved because of a database error that appears to
 > be related to xrefs:
 >> psycopg2.IntegrityError: duplicate key value violates unique constraint "xref_pkey"
 >> DETAIL:  Key (entr, sens, xref, xentr, xsens)=(1160253, 1, 1, 1163726, 1) already exists.
 > 
 > The error appeared to be related to ヲタ車, as the page for オタク suggested there was a
 > problem with the incoming x-ref:
 >> ⇐ see: 2531080 <http://www.edrdg.org/jmdictdb/cgi-bin/entr.py?svc=jmdict&sid=&e=1101691>
 >>  Exception: list index out of range 1.otaku car  (painted with anime characters,...          
 > 
 > So I deleted ヲタ車 because I hoped it would resolve the error, with the intention of
 > restoring it afterwards.  The entry was successfully deleted, but now it cannot be
 > restored:
 >> psycopg2.IntegrityError: duplicate key value violates unique constraint "xref_pkey"
 >> DETAIL:  Key (entr, sens, xref, xentr, xsens)=(1163722, 1, 2, 1163725, 1) already exists.
 > After the error is fixed, ヲタ車 should be re-added.

2014-08-31 20:55:00 stuart
 On Edrdg.org jmdict database (searching for A+R+D, appr+unap):
   オタク;ヲタク 1034420 A(id=1044413) -> A*(id=1160252) -> A*(1160253) 	
   ヲタ車【ヲタしゃ】 2531080 D(id=1163722) [shows fwd xref to 1034420 plus 2 other bidir xrefs,
    no rev xref in 1034420 as expected since 2531080 is marked Deleted.]

 On a jmdict copy made 2014-08-27 installed locally:
   オタク 1034420 A(id=1044413) -> A*(id=1160252) -> A*(1160253) [shows rev xref to 2531080 
     ヲタ車 ヲタしゃ (with space char, the【】characters bracketing the reading seem to be gone,
    probably a side effect of rev 8f604cc07376 (2014-08-22, "web: fix problem with exceptions
    when displaying xrefs" but that's not germane to current problem.)
   ヲタ車【ヲタしゃ】 2531080 A(id=1101691) [shows fwd xref to 1034420 plus 2 other bidir xrefs,
    however the fwd xref to 1034420 shows reading #2 (ヲタク), not オタク.]
 
2014-09-01 10:13:00 stuart
 In jmdictdb rev 5364426523ef (2014-07-03) replaced function add_filtered_xrefs()
 in python/lib/jmcgi.py with a version the consolidated forward and reverse xrefs
 into three groups: forward, back and bi-directional.  The updated code was
 deployed on Arakawa on 2014-08-24 (I think).  add_filtered_xrefs() is called
 in by cgi pages that display the contents of entries (entr.py and edconf.py).

 From a debugging session on edsubmit.py when trying to approve the last
 unapproved entry for 1034420/オタク as Rene reported... 

 Forward xrefs (entr._sens[0]._xref):
 0: Xref(TARG=Entr(dfrm=None, chr=None, _sens=[...], _snd=[], seq=1002400,
  id=219, _krslv=[], srcnote=None, _rdng=[...], _grp=[], unap=False, _hist=[],
  src=1, _kanj=[...], stat=2, notes=None), direc=1, _xsens=[...], rdng=None,
  typ=3, xentr=219, kanj=2, xref=None, sens=None, entr=None, xsens=4, notes=None)

 Reverse xrefs (entr._sens[0]._xrer):
 0: Xref(TARG=Entr(dfrm=None, chr=None, _sens=[...], _snd=[], seq=2820990,
  id=1159926, _krslv=[], srcnote='', _rdng=[...], _grp=[], unap=False, _hist=[],
  src=1, _kanj=[], stat=2, notes=''), direc=-1, rdng=1, typ=3, xentr=1159926,
  kanj=None, xref=1, sens=1, entr=1160253, xsens=1, notes=None)

 1: Xref(TARG=Entr(dfrm=None, chr=None, _sens=[...], _snd=[], seq=2229380,
  id=1100451, _krslv=[], srcnote='', _rdng=[...], _grp=[], unap=False, _hist=[],
  src=1, _kanj=[], stat=2, notes=''), direc=-1, rdng=1, typ=3, xentr=1100451,
  kanj=None, xref=2, sens=1, entr=1160253, xsens=1, notes=None)

 [...7 more elided...]

 Note that the xrefs all have a .direc attribute.  This was added
 by jmcgi.py:add_filtered_xrefs() when it was called in edconf.py. 
 However, that function is supposed to create a new list (.XREF) of
 "directional" xrefs on each sens *without* modifying the existing
 xrefs in ._xref and ._xrer.  But when building the .XREF list, it
 used references to the actual Xref() instances on the ._xref and
 ._xrer lists and modified them without making copies thus modifying
 them on the ._xref and ._xrer lists as well.  The added .direct
 attribute which is harmless; the big problem comes because
 add_filtered_xrefs() swaps the attributes the specify the xref's
 "from" and "to" direction (.entr,.sens and .xentr,.xsens) to allow
 the template to use the same attributes for display regardless of
 the direction.  It is that swapping that is doing the damage.
 The corrupted xrefs are then passed to edsubmit.py where they may
 or may not cause a failure when edsubmit tries to add the entry
 to the database.

 Modified jmcgi.py:add_filtered_xrefs() to make copies of the Xref()
 objects before modifying them for the .XREF list.

 All entries having xrefs that have been submitted since the Arakawa's
 cgi files were updated with the problem code:
   -rw-r--r-- 1 jwb jwb  45989 Aug 23 07:41 jmcgi.py
 (times on Arakawa seem to be UTC) should be checked for corrupted
 xrefs.  The xref corruption would not necessarily produce an error
 at submission nor is it limited to approvals.

 Updates made via the bulkupt.py program should not be affected (since 
 the problem was in the cgi code).

2014-09-01 21:24:00 stuart
 One symptom of the problem seems to be the submision of unapproved
 entries where there are rev xrefs from the parent (or the approved?)
 entry.  Ran following query on Arakawa's jmdict database which finds
 enties with forward or reverse xrefs to another entry with the same 
 seq number:

 SELECT e1.seq,e1.id,e2.id
   FROM xref x 
   JOIN entr e1 ON e1.id=x.entr 
   JOIN entr e2 ON e2.id=x.xentr
   WHERE e1.src=e2.src AND e1.seq=e2.seq;

     seq   |   id    |   id    
  ---------+---------+---------
   2822410 | 1163672 | 1163676
   2822410 | 1163680 | 1163676
   1421850 |   40619 | 1163449
   1421850 |   40619 | 1163449
   1421850 |   40619 | 1163449
   1421850 |   40619 | 1163449
   2822420 | 1163673 | 1163678
   1436560 |   42057 | 1163736
   1436560 |   42057 | 1163736
   1436560 |   42057 | 1163736
   1436560 |   42057 | 1163736

2014-09-01 23:21:00 stuart
 Loaded jmdict backup from 2014-08-23 into database jmnew.  This was before
  the problem software update.

 Loaded jmdict backup from 2014-08-31 into dataqbase jmtest.  This was before
  (I think) Rene's deletion of the problem entry he reported and before a number
  of entries were approved with the consequent deletion of their parent entries
  and their corruped xrefs.  Loaded with:
    psql -d jmtest -U jmtestdb <jmdict-20140831-dmp.sql
  and got errors like:
    CREATE TABLE
    ERROR:  must be member of role "jmdictdb"
  It seems the objects were created and the errors are from ommands in the dump
  file to set owner to 'jmdictdb'.  After load, can search and view entries which
  is all I care about at the moment.

 > Message-ID: <CABHGxq4AjRboPDz8nF8a5XzazfD3xsfCuRzKY9NMUmh9-Ejv8w@mail.gmail.com>
 > To: jmdict_editors@yahoogroups.com
 > From: "Jim Breen jimbreen@gmail.com [jmdict_editors]" <jmdict_editors@yahoogroups.com>
 > Date: Tue, 2 Sep 2014 10:26:37 +1000
 > Subject: Re: [jmdict_editors] DB errors
 >[...]
 > The one I just approved (1436310, 提げる) doesn't, but in a
 > backup copy of edict2 I can see it [xref to 提げる]
 >[...]
 > That entry (2107350) doesn't have any xrefs now, and none show in
 > its history, but it was there in 2010 in the old system and presumably
 > also until yesterday in the database.

 It (an xref to 1436310/提げる) was also there on 2014-08-31 according to the 
 jmdict backup restored  from that date.  It seems to have been lost when
 Jim approved 2107350.

2014-09-02 15:00:00 stuart
 First attempt to generate the results shown in next note.
 
2014-09-03 09:57:00 stuart
 jmnew  2014-08-23
 jmtest 2014-08-31
 Run following query on the 2014-08-31 database (in jmtest).
 It gives the seq numbers of all entries that were modified (ie have
 a hist record) after 2014-08-23.  Save the output.

 $ psql jmtest
 \pset tuples_only on
 \o load-tmp.sql
 select  'INSERT INTO tmp VALUES(' || seq::TEXT || ');'
   from (
     select distinct e.seq
       from hist h 
       join entr e on e.id=h.entr
       where e.src=1 and h.dt>='2014-08-23' and h.notes!='Adding yoji tag') as t
   order by seq;
 \o

 Also create a file showing all entries with hist>=08-23 and
 not a yoji bulk update) that have xrefs and what they are.
 3 columns: entry seq number, xref direction ('f' or 'r', 
 entry seq number of xref target.

 \pset tuples_only off
 \o xrefs-0831.txt
 select * from
  (select distinct e.seq as entr,'f' as dir,ef.seq as xref
  from hist h 
  join entr e on e.id=h.entr
  join xref xf on xf.entr=e.id
  join entr ef on xf.xentr=ef.id
  where e.src=1 and h.dt>='2014-08-23' and h.notes!='Adding yoji tag' 
  union 
  select distinct e.seq,'r',er.seq
  from hist h 
  join entr e on e.id=h.entr
  join xref xr on xr.xentr=e.id
  join entr er on xr.entr=er.id
  where e.src=1 and h.dt>='2014-08-23' and h.notes!='Adding yoji tag') as s
  order by entr,xref,dir;
 \o

 In the 2014-08-23 database (jmnew)

 \c jmnew
 drop table if exists tmp; 
 create table tmp (seq int primary key);
 \i load-tmp.sql

 Generate a similar xrefs file from the 08-23 database with entries
 restricted to entries that had hist records after 08-23 in the 08-31
 database.

 \pset tuples_only
 \o xrefs-0823txt
 select * from
  (select distinct e.seq as entr,'f' as dir,ef.seq as xref
  from tmp
  join entr e on e.seq=tmp.seq
  join xref xf on xf.entr=e.id
  join entr ef on xf.xentr=ef.id
  where e.src=1
  union 
  select distinct e.seq,'r',er.seq
  from tmp 
  join entr e on e.seq=tmp.seq
  join xref xr on xr.xentr=e.id
  join entr er on xr.entr=er.id
  where e.src=1) as s
  order by entr,xref,dir;
  \o

 Now, compare the two xrefs files.

 diff -U100 xrefs-0823.txt xrefs-0831.txt

    --- xrefs-0823.txt	2014-09-03 17:00:10.000000000 +0000
    +++ xrefs-0831.txt	2014-09-03 16:54:54.000000000 +0000
    @@ -1,53 +1,101 @@
    +  entr   | dir |  xref   
    +---------+-----+---------
      1005930 | f   | 2194060
      1005930 | r   | 2194060
      1005930 | r   | 2565720
    - 1018850 | r   | 1018840
    + 1008940 | f   | 2822140
    + 1150900 | f   | 2822180
      1222230 | f   | 1982670
    + 1222230 | f   | 2822300
      1269130 | r   | 2560340
      1269130 | r   | 2560590
      1269130 | r   | 2819800
    - 1344260 | r   | 2573350    ?
    - 1421850 | r   | 2068730    ? also noted above
    - 1421850 | r   | 2777570
    - 1484600 | r   | 2572610 *
    - 1577490 | r   | 2007670    ok i think
    - 1577490 | r   | 2610990
    + 1283700 | f   | 1283720
    + 1344260 | f   | 2822400    ?
    + 1421850 | r   | 1421850    ?  (also note: we didn't find 1436560 found above)
    + 1577490 | f   | 2822320
      1606300 | f   | 1305720
    - 1890000 | f   | 2238100    adj-i
    - 1890000 | r   | 2238100
    - 1890000 | r   | 2238180
    + 1890000 | f   | 2822210
      1901140 | f   | 1354720
    - 1901140 | f   | 2238120
      1901140 | r   | 2238120
    - 1901140 | f   | 2238230
      1901140 | r   | 2238230
      2089020 | r   | 1005900
      2089020 | r   | 1007400
      2089020 | f   | 1008340
      2089020 | f   | 1628500
      2089020 | r   | 1628500
      2089020 | r   | 2027020
      2089020 | r   | 2028960
      2089020 | f   | 2654250
      2089020 | r   | 2654250
      2089020 | r   | 2819970
      2089020 | r   | 2819990
      2089020 | r   | 2820000
      2110630 | f   | 1794040
      2136540 | f   | 1005230
    + 2153940 | f   | 1586820
      2207940 | f   | 1171790
    - 2207940 | f   | 2238150
      2207940 | r   | 2238150
    - 2238100 | f   | 1890000
    - 2238100 | r   | 1890000
    + 2207940 | f   | 2822270
    + 2207940 | r   | 2822280
    + 2238100 | f   | 2822220
      2238120 | f   | 1901140
    - 2238120 | r   | 1901140
      2238150 | f   | 2207940
    - 2238150 | r   | 2207940
    + 2238150 | f   | 2822280
      2238230 | f   | 1901140
    - 2238230 | r   | 1901140
    - 2610990 | f   | 1577490
    + 2258230 | f   | 2822190
    + 2258240 | f   | 2822200
    + 2458040 | r   | 2822120
    + 2458040 | r   | 2822130
    + 2514860 | f   | 2822310
    + 2610990 | f   | 2822320
    + 2744400 | f   | 2822290
    + 2796380 | r   | 2822150
      2820690 | f   | 1605820
      2821560 | f   | 1567610
      2821590 | f   | 1446640
    + 2821630 | f   | 1101010
    + 2821640 | f   | 1101010
    + 2821680 | f   | 1452310
    + 2822020 | f   | 2110510
    + 2822120 | f   | 2458040
    + 2822130 | f   | 2458040
    + 2822140 | r   | 1008940
    + 2822150 | f   | 2796380
    + 2822170 | f   | 1354720
    + 2822180 | r   | 1150900
    + 2822190 | r   | 2258230
    + 2822200 | r   | 2258240
    + 2822210 | r   | 1890000
    + 2822220 | r   | 2238100
    + 2822270 | f   | 1171790
    + 2822270 | r   | 2207940
    + 2822280 | f   | 2207940
    + 2822280 | r   | 2238150
    + 2822290 | r   | 2744400
    + 2822300 | r   | 1222230
    + 2822300 | f   | 1982670
    + 2822310 | r   | 2514860
    + 2822320 | r   | 1577490
    + 2822320 | r   | 2610990
    + 2822330 | f   | 1959570
    + 2822370 | f   | 1153640
    + 2822400 | r   | 1344260
    + 2822400 | f   | 2822410
    + 2822400 | r   | 2822410
    + 2822400 | f   | 2822420
    + 2822400 | r   | 2822420
    + 2822400 | r   | 2822430
    + 2822410 | f   | 2822400
    + 2822410 | r   | 2822400
    + 2822410 | f   | 2822410
    + 2822410 | r   | 2822410
    + 2822420 | f   | 2822400
    + 2822420 | r   | 2822400
    + 2822420 | f   | 2822420
    + 2822420 | r   | 2822420
    + 2822430 | f   | 2822400
    + 2822440 | r   | 2822450
    + 2822450 | f   | 2822440
    +(97 rows)




